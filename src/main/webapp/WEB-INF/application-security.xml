<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ldap="http://www.springframework.org/schema/ldap"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/ldap http://www.springframework.org/schema/ldap/spring-ldap-2.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	
	<http auto-config="true" use-expressions="true">
	    <intercept-url pattern="/admin/*" access="hasRole('ROLE_ADMIN')" />
	    <intercept-url pattern="/admin/*/*" access="hasRole('ROLE_ADMIN')" />
	    <intercept-url pattern="/admin/*/*/*" access="hasRole('ROLE_ADMIN')" />
	    <intercept-url pattern="/admin/*/*/*/*" access="hasRole('ROLE_ADMIN')" />
	    
		<form-login login-page="/index" default-target-url="/getLogedIn" authentication-failure-url="/failtologin" />
		<access-denied-handler error-page="/accessDenied" />
		<logout logout-success-url="/logout" delete-cookies="JSESSIONID" />
	    
	    <custom-filter ref="concurrencyFilter" position="CONCURRENT_SESSION_FILTER" />
		<session-management session-authentication-strategy-ref="sas" />
	   
	    <!-- enable remember me -->
	    <remember-me token-validity-seconds="1209600" data-source-ref="dataSource" />
	</http>
	
	<authentication-manager alias="authenticationManager">
	   <authentication-provider>
	       <password-encoder hash="bcrypt"></password-encoder>
	           <jdbc-user-service data-source-ref="dataSource"    
	             users-by-username-query="select userid, password, active from login_info where userid=?"   
	             authorities-by-username-query="select us.userid, ur.user_role as userrole from login_info us, user_role ur   
	        where us.userid = ur.userid and us.userid =?"  />
	   </authentication-provider>
	</authentication-manager>
	
	
	<beans:bean id="concurrencyFilter"
        class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <beans:property name="sessionRegistry" ref="sessionRegistry" />
        <beans:property name="expiredUrl" value="/session-expired.jsp" />
    </beans:bean>
 
	
	<beans:bean id="sas"
        class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
                    <beans:constructor-arg ref="sessionRegistry" />
                    <beans:property name="maximumSessions" value="10" />
                    <beans:property name="exceptionIfMaximumExceeded" value="true" />
                </beans:bean>
                <beans:bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
                </beans:bean>
                <beans:bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
                    <beans:constructor-arg ref="sessionRegistry" />
                </beans:bean>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>
	 <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
	
</beans:beans>